{"version":3,"file":"main.js","mappings":"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","sources":["webpack://ahj-dnd/./src/js/local_storage.js","webpack://ahj-dnd/./src/js/app.js","webpack://ahj-dnd/./src/js/dnd.js"],"sourcesContent":["import { createTask } from \"./app.js\";\n\nexport function saveTasks() {\n  const tasks = {\n    todo: getTasks(\".todo\"),\n    progress: getTasks(\".progress\"),\n    done: getTasks(\".done\"),\n  };\n  localStorage.setItem(\"tasks\", JSON.stringify(tasks));\n}\n\nfunction getTasks(selector) {\n  const tasks = [];\n  document.querySelectorAll(`${selector} .task .text`).forEach((task) => {\n    tasks.push(task.textContent);\n  });\n  return tasks;\n}\n\nexport function loadTasks(toDo, inProcess, done) {\n  const tasks = JSON.parse(localStorage.getItem(\"tasks\"));\n  if (!tasks) {\n    return;\n  }\n\n  tasks.todo.forEach((task) => {\n    addTaskToColumn(task, toDo);\n  });\n  tasks.progress.forEach((task) => {\n    addTaskToColumn(task, inProcess);\n  });\n  tasks.done.forEach((task) => {\n    addTaskToColumn(task, done);\n  });\n}\n\nfunction addTaskToColumn(taskContent, column) {\n  const task = createTask(taskContent);\n  column.appendChild(task);\n}\n","import { saveTasks, loadTasks } from \"./local_storage.js\";\n\nexport function createTask(textContent) {\n  const task = document.createElement(\"div\");\n  task.classList.add(\"task\");\n  const text = document.createElement(\"span\");\n  text.classList.add(\"text\");\n  text.textContent = textContent;\n\n  const removeButn = document.createElement(\"button\");\n  removeButn.classList.add(\"close\");\n  const cross = document.createElement(\"span\");\n  cross.classList.add(\"cross\");\n  cross.textContent = \"Ã—\";\n\n  removeButn.appendChild(cross);\n  task.appendChild(text);\n  task.appendChild(removeButn);\n  removeButn.addEventListener(\"click\", deleteTask);\n  removeButn.addEventListener(\"mousedown\", (event) => {\n    event.stopPropagation();\n  });\n\n  return task;\n}\n\nfunction deleteTask(event) {\n  event.preventDefault();\n  const el = event.currentTarget;\n  const parent = el.closest(\".task\");\n  parent.remove();\n  saveTasks();\n}\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  const btns = document.querySelectorAll(\".adding\");\n  const toDo = document.querySelector(\".todo\");\n  const inProcess = document.querySelector(\".progress\");\n  const done = document.querySelector(\".done\");\n\n  function createTextField(event) {\n    const el = event.currentTarget;\n    const parent = el.closest(\".container\");\n\n    const currentForm = document.querySelector(\".formWrapper\");\n    if (currentForm) {\n      currentForm.remove();\n    }\n\n    const formContainer = document.createElement(\"div\");\n    formContainer.classList.add(\"formWrapper\");\n    const form = document.createElement(\"form\");\n    form.classList.add(\"myForm\");\n\n    const field = document.createElement(\"textarea\");\n    field.classList.add(\"text_field\");\n    field.placeholder = \"enter a title for this card ...\";\n    field.addEventListener(\"mousedown\", (event) => {\n      event.stopPropagation();\n    });\n\n    const createBtn = document.createElement(\"button\");\n    createBtn.classList.add(\"formBtn\", \"create\");\n    createBtn.textContent = \"Add Card\";\n\n    const closeBtn = document.createElement(\"button\");\n    closeBtn.classList.add(\"cross\", \"close_form\");\n    closeBtn.textContent = \"\\u2715\";\n\n    form.appendChild(field);\n    form.appendChild(createBtn);\n    form.appendChild(closeBtn);\n    formContainer.appendChild(form);\n\n    if (parent.querySelector(\".todo\")) {\n      createBtn.classList.add(\"toDoColumn\");\n      toDo.appendChild(formContainer);\n    } else if (parent.querySelector(\".progress\")) {\n      createBtn.classList.add(\"processColumn\");\n      inProcess.appendChild(formContainer);\n    } else if (parent.querySelector(\".done\")) {\n      createBtn.classList.add(\"doneColumn\");\n      done.appendChild(formContainer);\n    }\n\n    closeBtn.addEventListener(\"click\", (e) => {\n      e.preventDefault();\n      formContainer.remove();\n    });\n\n    createBtn.addEventListener(\"click\", addNewTask);\n  }\n\n  btns.forEach((btn) => {\n    btn.addEventListener(\"click\", createTextField);\n  });\n\n  function addNewTask(event) {\n    event.preventDefault();\n    const el = event.currentTarget;\n    const formContainer = document.querySelector(\".formWrapper\");\n    const field = document.querySelector(\".text_field\");\n    if (field.value.trim() === \"\") {\n      return;\n    }\n    const task = createTask(field.value);\n\n    if (el.classList.contains(\"toDoColumn\")) {\n      toDo.appendChild(task);\n    } else if (el.classList.contains(\"processColumn\")) {\n      inProcess.appendChild(task);\n    } else if (el.classList.contains(\"doneColumn\")) {\n      done.appendChild(task);\n    }\n    formContainer.remove();\n    saveTasks();\n  }\n\n  loadTasks(toDo, inProcess, done);\n});\n","import { saveTasks } from \"./local_storage.js\";\n\ndocument.addEventListener(\"DOMContentLoaded\", () => {\n  let actualElement;\n  let shiftX, shiftY;\n  const container = document.querySelector(\".main-container\");\n\n  function createPlaceholder() {\n    const plaseEl = document.createElement(\"div\");\n    plaseEl.classList.add(\"placeholder\");\n    plaseEl.style.width = actualElement.offsetWidth + \"px\";\n    plaseEl.style.height = actualElement.offsetHeight + \"px\";\n    return plaseEl;\n  }\n\n  function removePlaceholder() {\n    const plaseEl = document.querySelector(\".placeholder\");\n    if (!plaseEl) return;\n    plaseEl.remove();\n  }\n\n  function mouseDown(e) {\n    e.preventDefault();\n    actualElement = e.target.closest(\".task\");\n    if (!actualElement) {\n      return;\n    }\n\n    const { left, top } = actualElement.getBoundingClientRect();\n    shiftX = e.clientX - left;\n    shiftY = e.clientY - top;\n\n    actualElement.classList.add(\"dragged\");\n    actualElement.style.cursor = \"grab\";\n\n    container.addEventListener(\"mouseup\", onMouseUp);\n    container.addEventListener(\"mouseover\", onMouseOver);\n  }\n\n  container.addEventListener(\"mousedown\", mouseDown);\n\n  function onMouseOver(e) {\n    actualElement.style.top = e.clientY - shiftY + \"px\";\n    actualElement.style.left = e.clientX - shiftX + \"px\";\n    removePlaceholder();\n    const plaseEl = createPlaceholder();\n    const mouseOverItem = e.target;\n    const closestTask = mouseOverItem.closest(\".task\");\n    if (!closestTask) {\n      const closestTasksContainer = mouseOverItem.querySelector(\".tasks\");\n      if (!closestTasksContainer) return;\n      closestTasksContainer.appendChild(plaseEl);\n    } else {\n      const parentElement = closestTask.closest(\".tasks\");\n      parentElement.insertBefore(plaseEl, closestTask);\n    }\n  }\n\n  function onMouseUp(e) {\n    console.log(e);\n    const mouseUpItem = e.target;\n    const closestTask = mouseUpItem.closest(\".task\");\n\n    if (!closestTask) {\n      const closestTasksContainer = mouseUpItem.querySelector(\".tasks\");\n      if (!closestTasksContainer) return;\n      closestTasksContainer.appendChild(actualElement);\n    } else {\n      const parentElement = closestTask.closest(\".tasks\");\n      parentElement.insertBefore(actualElement, closestTask);\n    }\n\n    actualElement.classList.remove(\"dragged\");\n    actualElement = undefined;\n    removePlaceholder();\n\n    container.removeEventListener(\"mouseup\", onMouseUp);\n    container.removeEventListener(\"mouseover\", onMouseOver);\n\n    saveTasks();\n  }\n});\n"],"names":["saveTasks","tasks","todo","getTasks","progress","done","localStorage","setItem","JSON","stringify","selector","document","querySelectorAll","forEach","task","push","textContent","addTaskToColumn","taskContent","column","createTask","appendChild","createElement","classList","add","text","removeButn","cross","addEventListener","deleteTask","event","stopPropagation","preventDefault","currentTarget","closest","remove","btns","toDo","querySelector","inProcess","createTextField","parent","currentForm","formContainer","form","field","placeholder","createBtn","closeBtn","e","addNewTask","el","value","trim","contains","btn","parse","getItem","loadTasks","actualElement","shiftX","shiftY","container","removePlaceholder","plaseEl","onMouseOver","style","top","clientY","left","clientX","width","offsetWidth","height","offsetHeight","createPlaceholder","mouseOverItem","target","closestTask","insertBefore","closestTasksContainer","onMouseUp","console","log","mouseUpItem","undefined","removeEventListener","getBoundingClientRect","cursor"],"sourceRoot":""}